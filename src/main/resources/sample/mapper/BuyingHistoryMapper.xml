<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sample.mapper.BuyingHistoryMapper">
	<resultMap id="BaseResultMap" type="sample.model.BuyingHistory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		<id column="buying_id" jdbcType="INTEGER" property="buyingId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="buying_date" jdbcType="DATE" property="buyingDate" />
		<result column="payment" jdbcType="VARCHAR" property="payment" />
		<result column="delivery" jdbcType="VARCHAR" property="delivery" />
		<result column="postage" jdbcType="INTEGER" property="postage" />
		<result column="total_price" jdbcType="INTEGER" property="totalPrice" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		buying_id, user_id, buying_date, payment, delivery, postage,
		total_price
	</sql>
	<select id="selectByExample" parameterType="sample.model.BuyingHistoryExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from public.buying_history
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="sample.model.BuyingHistoryKey"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		select
		<include refid="Base_Column_List" />
		from public.buying_history
		where buying_id =
		#{buyingId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="sample.model.BuyingHistoryKey">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		delete from public.buying_history
		where buying_id =
		#{buyingId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="sample.model.BuyingHistory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		insert into public.buying_history (buying_id, user_id, buying_date,
		payment, delivery, postage,
		total_price)
		values
		(#{buyingId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{buyingDate,jdbcType=DATE},
		#{payment,jdbcType=VARCHAR},
		#{delivery,jdbcType=VARCHAR}, #{postage,jdbcType=INTEGER},
		#{totalPrice,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="sample.model.BuyingHistory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		insert into public.buying_history
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="buyingId != null">
				buying_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="buyingDate != null">
				buying_date,
			</if>
			<if test="payment != null">
				payment,
			</if>
			<if test="delivery != null">
				delivery,
			</if>
			<if test="postage != null">
				postage,
			</if>
			<if test="totalPrice != null">
				total_price,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="buyingId != null">
				#{buyingId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="buyingDate != null">
				#{buyingDate,jdbcType=DATE},
			</if>
			<if test="payment != null">
				#{payment,jdbcType=VARCHAR},
			</if>
			<if test="delivery != null">
				#{delivery,jdbcType=VARCHAR},
			</if>
			<if test="postage != null">
				#{postage,jdbcType=INTEGER},
			</if>
			<if test="totalPrice != null">
				#{totalPrice,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="sample.model.BuyingHistory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		update public.buying_history
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="buyingDate != null">
				buying_date = #{buyingDate,jdbcType=DATE},
			</if>
			<if test="payment != null">
				payment = #{payment,jdbcType=VARCHAR},
			</if>
			<if test="delivery != null">
				delivery = #{delivery,jdbcType=VARCHAR},
			</if>
			<if test="postage != null">
				postage = #{postage,jdbcType=INTEGER},
			</if>
			<if test="totalPrice != null">
				total_price = #{totalPrice,jdbcType=INTEGER},
			</if>
		</set>
		where buying_id = #{buyingId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="sample.model.BuyingHistory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Dec 09 
			17:39:45 JST 2015. -->
		update public.buying_history
		set user_id = #{userId,jdbcType=INTEGER},
		buying_date = #{buyingDate,jdbcType=DATE},
		payment =
		#{payment,jdbcType=VARCHAR},
		delivery = #{delivery,jdbcType=VARCHAR},
		postage = #{postage,jdbcType=INTEGER},
		total_price =
		#{totalPrice,jdbcType=INTEGER}
		where buying_id =
		#{buyingId,jdbcType=INTEGER}
	</update>
	<!-- start▼追加▼ -->
	<insert id="insertOne" parameterType="sample.model.BuyingHistory">
		INSERT INTO public.buying_history(
		user_id,
		buying_date,
		payment,
		delivery,
		postage,
		total_price)
		VALUES(
		#{userId,jdbcType=INTEGER},
		#{buyingDate,jdbcType=DATE},
		#{payment,jdbcType=VARCHAR},
		#{delivery,jdbcType=VARCHAR},
		#{postage,jdbcType=INTEGER},
		#{totalPrice,jdbcType=INTEGER})
	</insert>
	<select id="selectAllBuyingHistory" parameterType="sample.model.BuyingHistory" 
	        resultMap="BaseResultMap">
		SELECT buying_date, payment, delivery, total_price
		FROM   buying_history
		WHERE  user_id = #{itemId,jdbcType=INTEGER};
	</select>
	<select id="selectSortedBuyingHistory" parameterType="sample.model.BuyingHistoryExample"
		resultMap="BaseResultMap">
		SELECT buying_date, payment, delivery, total_price
		FROM public.buying_history
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- end ▲追加▲ -->
</mapper>