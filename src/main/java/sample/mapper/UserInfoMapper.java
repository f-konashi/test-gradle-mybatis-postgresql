package sample.mapper;

import java.util.List;
import sample.model.UserInfo;
import sample.model.UserInfoExample;
import sample.model.UserInfoKey;

public interface UserInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.user_info
     *
     * @mbggenerated Wed Dec 09 17:39:45 JST 2015
     */
    int deleteByPrimaryKey(UserInfoKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.user_info
     *
     * @mbggenerated Wed Dec 09 17:39:45 JST 2015
     */
    int insert(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.user_info
     *
     * @mbggenerated Wed Dec 09 17:39:45 JST 2015
     */
    int insertSelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.user_info
     *
     * @mbggenerated Wed Dec 09 17:39:45 JST 2015
     */
    List<UserInfo> selectByExample(UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.user_info
     *
     * @mbggenerated Wed Dec 09 17:39:45 JST 2015
     */
    UserInfo selectByPrimaryKey(UserInfoKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.user_info
     *
     * @mbggenerated Wed Dec 09 17:39:45 JST 2015
     */
    int updateByPrimaryKeySelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.user_info
     *
     * @mbggenerated Wed Dec 09 17:39:45 JST 2015
     */
    int updateByPrimaryKey(UserInfo record);
    
	/**
     * 【SELECT:全件】
	 * テーブルデータを全件取得する.
	 * 
	 * @return　全会員情報
	 */
	List<UserInfo> getAll();

	/**
     * 【SELECT:1件】
     * 会員情報情報を、ログインIDから取得する.
     * 
     * @param　loginId　情報を取得したい会員のログインID
     * @return　引数で指定したログインIDの会員情報
     */
    UserInfo selectByLoginId(String loginId);
	
    /**
     * 【SELECT:1件】
     * 会員情報情報を、ログインIDから取得する.
     * 
     * @param　loginId　情報を取得したい会員のログインID
     * @return　引数で指定したログインIDの会員情報
     */
    UserInfo selectWithoutPassByLoginId(String loginId);
    
	/**
	 * 【INSERT:1件】
	 * 新規会員情報を1件挿入する.
	 * 
	 * @param　会員登録画面で入力された新規会員情報
	 * @return デーブルにデータを挿入した件数
	 */
	int insertOne(UserInfo record);
}