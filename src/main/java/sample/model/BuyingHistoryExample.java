package sample.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BuyingHistoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public BuyingHistoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andBuyingIdIsNull() {
            addCriterion("buying_id is null");
            return (Criteria) this;
        }

        public Criteria andBuyingIdIsNotNull() {
            addCriterion("buying_id is not null");
            return (Criteria) this;
        }

        public Criteria andBuyingIdEqualTo(Integer value) {
            addCriterion("buying_id =", value, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdNotEqualTo(Integer value) {
            addCriterion("buying_id <>", value, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdGreaterThan(Integer value) {
            addCriterion("buying_id >", value, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("buying_id >=", value, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdLessThan(Integer value) {
            addCriterion("buying_id <", value, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdLessThanOrEqualTo(Integer value) {
            addCriterion("buying_id <=", value, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdIn(List<Integer> values) {
            addCriterion("buying_id in", values, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdNotIn(List<Integer> values) {
            addCriterion("buying_id not in", values, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdBetween(Integer value1, Integer value2) {
            addCriterion("buying_id between", value1, value2, "buyingId");
            return (Criteria) this;
        }

        public Criteria andBuyingIdNotBetween(Integer value1, Integer value2) {
            addCriterion("buying_id not between", value1, value2, "buyingId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andItemIdIsNull() {
            addCriterion("item_id is null");
            return (Criteria) this;
        }

        public Criteria andItemIdIsNotNull() {
            addCriterion("item_id is not null");
            return (Criteria) this;
        }

        public Criteria andItemIdEqualTo(Integer value) {
            addCriterion("item_id =", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotEqualTo(Integer value) {
            addCriterion("item_id <>", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdGreaterThan(Integer value) {
            addCriterion("item_id >", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("item_id >=", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdLessThan(Integer value) {
            addCriterion("item_id <", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdLessThanOrEqualTo(Integer value) {
            addCriterion("item_id <=", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdIn(List<Integer> values) {
            addCriterion("item_id in", values, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotIn(List<Integer> values) {
            addCriterion("item_id not in", values, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdBetween(Integer value1, Integer value2) {
            addCriterion("item_id between", value1, value2, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotBetween(Integer value1, Integer value2) {
            addCriterion("item_id not between", value1, value2, "itemId");
            return (Criteria) this;
        }

        public Criteria andBuyingCountIsNull() {
            addCriterion("buying_count is null");
            return (Criteria) this;
        }

        public Criteria andBuyingCountIsNotNull() {
            addCriterion("buying_count is not null");
            return (Criteria) this;
        }

        public Criteria andBuyingCountEqualTo(Integer value) {
            addCriterion("buying_count =", value, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountNotEqualTo(Integer value) {
            addCriterion("buying_count <>", value, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountGreaterThan(Integer value) {
            addCriterion("buying_count >", value, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("buying_count >=", value, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountLessThan(Integer value) {
            addCriterion("buying_count <", value, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountLessThanOrEqualTo(Integer value) {
            addCriterion("buying_count <=", value, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountIn(List<Integer> values) {
            addCriterion("buying_count in", values, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountNotIn(List<Integer> values) {
            addCriterion("buying_count not in", values, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountBetween(Integer value1, Integer value2) {
            addCriterion("buying_count between", value1, value2, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingCountNotBetween(Integer value1, Integer value2) {
            addCriterion("buying_count not between", value1, value2, "buyingCount");
            return (Criteria) this;
        }

        public Criteria andBuyingDateIsNull() {
            addCriterion("buying_date is null");
            return (Criteria) this;
        }

        public Criteria andBuyingDateIsNotNull() {
            addCriterion("buying_date is not null");
            return (Criteria) this;
        }

        public Criteria andBuyingDateEqualTo(Date value) {
            addCriterionForJDBCDate("buying_date =", value, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("buying_date <>", value, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateGreaterThan(Date value) {
            addCriterionForJDBCDate("buying_date >", value, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("buying_date >=", value, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateLessThan(Date value) {
            addCriterionForJDBCDate("buying_date <", value, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("buying_date <=", value, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateIn(List<Date> values) {
            addCriterionForJDBCDate("buying_date in", values, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("buying_date not in", values, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("buying_date between", value1, value2, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andBuyingDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("buying_date not between", value1, value2, "buyingDate");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodIsNull() {
            addCriterion("payment_method is null");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodIsNotNull() {
            addCriterion("payment_method is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodEqualTo(String value) {
            addCriterion("payment_method =", value, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodNotEqualTo(String value) {
            addCriterion("payment_method <>", value, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodGreaterThan(String value) {
            addCriterion("payment_method >", value, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodGreaterThanOrEqualTo(String value) {
            addCriterion("payment_method >=", value, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodLessThan(String value) {
            addCriterion("payment_method <", value, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodLessThanOrEqualTo(String value) {
            addCriterion("payment_method <=", value, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodLike(String value) {
            addCriterion("payment_method like", value, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodNotLike(String value) {
            addCriterion("payment_method not like", value, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodIn(List<String> values) {
            addCriterion("payment_method in", values, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodNotIn(List<String> values) {
            addCriterion("payment_method not in", values, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodBetween(String value1, String value2) {
            addCriterion("payment_method between", value1, value2, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andPaymentMethodNotBetween(String value1, String value2) {
            addCriterion("payment_method not between", value1, value2, "paymentMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodIsNull() {
            addCriterion("delivery_method is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodIsNotNull() {
            addCriterion("delivery_method is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodEqualTo(String value) {
            addCriterion("delivery_method =", value, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodNotEqualTo(String value) {
            addCriterion("delivery_method <>", value, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodGreaterThan(String value) {
            addCriterion("delivery_method >", value, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodGreaterThanOrEqualTo(String value) {
            addCriterion("delivery_method >=", value, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodLessThan(String value) {
            addCriterion("delivery_method <", value, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodLessThanOrEqualTo(String value) {
            addCriterion("delivery_method <=", value, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodLike(String value) {
            addCriterion("delivery_method like", value, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodNotLike(String value) {
            addCriterion("delivery_method not like", value, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodIn(List<String> values) {
            addCriterion("delivery_method in", values, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodNotIn(List<String> values) {
            addCriterion("delivery_method not in", values, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodBetween(String value1, String value2) {
            addCriterion("delivery_method between", value1, value2, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodNotBetween(String value1, String value2) {
            addCriterion("delivery_method not between", value1, value2, "deliveryMethod");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.buying_history
     *
     * @mbggenerated do_not_delete_during_merge Thu Dec 03 16:16:47 JST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.buying_history
     *
     * @mbggenerated Thu Dec 03 16:16:47 JST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}